using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Charlotte.GameCommons;

namespace Charlotte.Games.Surfaces
{
	public class Surface_キャラクタ : Surface
	{
		private double A = 0.0;
		private bool XReversed = false;
		private DDPicture Picture = DDGround.GeneralResource.Dummy;

		private class PictureInfo
		{
			public string Name;
			public DDPicture Picture;

			public PictureInfo(string name, DDPicture picture)
			{
				this.Name = name;
				this.Picture = picture;
			}
		}

		#region PictureList

		private PictureInfo[] PictureList = new PictureInfo[]
		{
			new PictureInfo("小悪魔_普通", Ground.I.Picture.立ち絵_小悪魔_01),
			new PictureInfo("小悪魔_ジト目", Ground.I.Picture.立ち絵_小悪魔_02),
			new PictureInfo("鍵山雛_普通", Ground.I.Picture.立ち絵_鍵山雛_01),
			new PictureInfo("鍵山雛_ジト目", Ground.I.Picture.立ち絵_鍵山雛_02),
		};

		#endregion

		public override IEnumerable<bool> E_Draw()
		{
			for (; ; )
			{
				DDUtils.Approach(ref this.A, 1.0, 0.9);

				DDDraw.SetAlpha(this.A);
				DDDraw.DrawBegin(this.Picture, this.X, this.Y);
				DDDraw.DrawZoom_X(this.XReversed ? -1.0 : 1.0);
				DDDraw.DrawEnd();
				DDDraw.Reset();

				yield return true;
			}
		}

		public override void Invoke_02(string command, string[] arguments)
		{
			int c = 0;

			if (command == "位置")
			{
				string position = arguments[c++];

				if (position == "左")
				{
					this.X = 200;
					this.Y = DDConsts.Screen_H - 100;
				}
				else if (position == "右")
				{
					this.X = 600;
					this.Y = DDConsts.Screen_H - 100;
				}
				else
				{
					throw new DDError();
				}
			}
			else if (command == "左右反転")
			{
				this.XReversed = true;
			}
			else if (command == "画像")
			{
				string name = arguments[c++];

				this.Picture = this.PictureList.First(v => v.Name == name).Picture;
			}
			else if (command == "発言")
			{
				string line = arguments[c++];

				Surface_MessageWindow mw = Game.I.SurfaceManager.GetMessageWindow();

				mw.Messages[0] = line;
				mw.Messages[1] = "";
				mw.MessageUpdated();
			}
			else if (command == "発２")
			{
				string line = arguments[c++];

				Surface_MessageWindow mw = Game.I.SurfaceManager.GetMessageWindow();

				mw.Messages[1] = line;
				mw.MessageUpdated();
			}
			else
			{
				throw new DDError();
			}
		}
	}
}
