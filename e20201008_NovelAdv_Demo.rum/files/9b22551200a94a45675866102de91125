using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Charlotte.GameCommons;

namespace Charlotte.Games.Surfaces
{
	public static class SurfaceCreator
	{
		public static Surface Create(string typeName, string instanceName)
		{
			Surface surface;

			// typeName はクラス名 Surface_<typeName> と対応する。難読化するのでリフレクションにすることは出来ない。

			switch (typeName)
			{
				case "MessageWindow": surface = new Surface_MessageWindow(); break; // システム(最初にロード)
				case "Select": surface = new Surface_Select(); break; // システム・選択肢
				case "System": surface = new Surface_System(); break; // システム(最初にロード)
				case "SystemButtons": surface = new Surface_SystemButtons(); break; // システム(最初にロード)
				case "イベント絵": surface = new Surface_イベント絵(); break; // イベント絵・セット
				case "エフェクト": surface = new Surface_エフェクト(); break; // エフェクト・セット？
				case "からい": surface = new Surface_からい(); break; // キャラクタ・セット
				case "ゆかりHead": surface = new Surface_ゆかりHead(); break; // キャラクタ
				case "ゆかりUFO": surface = new Surface_ゆかりUFO(); break; // キャラクタ
				case "音楽": surface = new Surface_音楽(); break; // システム・音楽
				case "結月ゆかり": surface = new Surface_結月ゆかり(); break; // キャラクタ
				case "弦巻マキ": surface = new Surface_弦巻マキ(); break; // キャラクタ
				case "効果音": surface = new Surface_効果音(); break; // システム・効果音
				case "照明": surface = new Surface_照明(); break; // 画面全体エフェクト
				case "雪": surface = new Surface_雪(); break; // 画面全体エフェクト
				case "東北ずん子": surface = new Surface_東北ずん子(); break; // キャラクタ
				case "背景": surface = new Surface_背景(); break; // 背景・セット

				// 新しいキャラクタをここへ追加..

				default:
					throw new DDError("不明なタイプ名：" + typeName);
			}
			surface.TypeName = typeName;
			surface.InstanceName = instanceName;

			return surface;
		}
	}
}
