using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Charlotte.GameCommons;

namespace Charlotte.Games
{
	public static class Effects
	{
		public static IEnumerable<bool> PlayerDead(double x, double y)
		{
			foreach (DDScene scene in DDSceneUtils.Create(39))
			{
				DDDraw.SetAlpha(0.8);
				DDDraw.DrawBegin(Ground.I.Picture2.D_PLAYERDIE_00[scene.Numer / 4], x, y);
				DDDraw.DrawZoom(1.0 + 2.0 * scene.Rate);
				DDDraw.DrawEnd();
				DDDraw.Reset();

				yield return true;
			}
		}

		public static IEnumerable<bool> ShotDead(double x, double y, double r)
		{
			double z = r / 8.0;

			foreach (DDScene scene in DDSceneUtils.Create(11))
			{
				DDDraw.SetAlpha(0.4);
				DDDraw.DrawBegin(Ground.I.Picture2.D_BLAST_00[scene.Numer / 3], x, y - scene.Numer * 5.0);
				DDDraw.DrawSlide(8.0, -8.0);
				DDDraw.DrawZoom(z);
				DDDraw.DrawEnd();
				DDDraw.Reset();

				yield return true;
			}
		}

		public static IEnumerable<bool> EnemyDead(double x, double y)
		{
			double r = DDUtils.Random.Real2() * Math.PI * 2.0;

			foreach (DDScene scene in DDSceneUtils.Create(19))
			{
				DDDraw.SetAlpha(0.7);
				DDDraw.DrawBegin(Ground.I.Picture2.D_ENEMYDIE_00[scene.Numer / 2], x, y);
				DDDraw.DrawRotate(r);
				DDDraw.DrawEnd();
				DDDraw.Reset();

				yield return true;
			}
		}

		public static IEnumerable<bool> TamaDead(double x, double y)
		{
			foreach (DDScene scene in DDSceneUtils.Create(29))
			{
				DDDraw.SetBlendAdd(1.0);
				DDDraw.DrawCenter(Ground.I.Picture2.D_ENEMYSHOTDIE_00[scene.Numer / 3], x, y);
				DDDraw.Reset();

				yield return true;
			}
		}
	}
}
