using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Charlotte.GameCommons;
using Charlotte.Commons;

namespace Charlotte.Games.Enemies
{
	/// <summary>
	/// 敵
	/// </summary>
	public abstract class Enemy
	{
		public enum Kind_e
		{
			ENEMY = 1, // 敵
			TAMA, // 敵の弾
			ITEM, // アイテム
		}

		/// <summary>
		/// 敵の種類
		/// コンストラクタで値を設定すること。
		/// </summary>
		public Kind_e Kind;

		/// <summary>
		/// 敵の体力
		/// コンストラクタで「デフォルトの体力」を設定すること。
		/// -- EnemyCreator.Create によって個別の体力を設定するかもしれない。
		/// 0 == 無敵
		/// </summary>
		public int HP;

		/// <summary>
		/// 無敵時間
		/// コンストラクタで値を設定すること。
		/// 画面に登場してから毎フレーム(ゼロになるまで)デクリメントし続ける。
		/// 0 == 無効, 0&lt; == 無敵
		/// </summary>
		public int TransFrame;

		public Enemy(Kind_e kind, int hp, int transFrame)
		{
			this.Kind = kind;
			this.HP = hp;
			this.TransFrame = transFrame;
		}

		public double X;
		public double Y;

		private Func<bool> _draw = null;

		public Func<bool> Draw
		{
			get
			{
				if (_draw == null)
					_draw = SCommon.Supplier(this.E_Draw());

				return _draw;
			}
		}

		/// <summary>
		/// 真を返し続けること。
		/// 偽を返すと、この敵は消滅する。
		/// 処理すべきこと：
		/// -- 行動
		/// -- 描画
		/// -- Game.I.EnemyCrashes への追加
		/// </summary>
		/// <returns>この敵は生存しているか</returns>
		protected abstract IEnumerable<bool> E_Draw();

		/// <summary>
		/// 撃破された時に呼び出される。
		/// 処理すべきこと(例)：
		/// -- 爆死エフェクトの追加 -&gt; Game.I.EnemyEffects
		/// -- ドロップアイテムを出現させる。
		/// -- スコア加算
		/// </summary>
		public abstract void Killed();
	}
}
